<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>acnoo</title>
  
  
  <link href="https://floribunda1.github.io/atom.xml" rel="self"/>
  
  <link href="https://floribunda1.github.io/"/>
  <updated>2022-05-18T15:40:31.384Z</updated>
  <id>https://floribunda1.github.io/</id>
  
  <author>
    <name>acnoo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Dive into Transformation（一）</title>
    <link href="https://floribunda1.github.io/2022/05/09/dive%20into%20transformation(1)/"/>
    <id>https://floribunda1.github.io/2022/05/09/dive%20into%20transformation(1)/</id>
    <published>2022-05-09T13:22:14.981Z</published>
    <updated>2022-05-18T15:40:31.384Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>最近在做的一个项目，其中需要缩放、平移画布的功能，和我们经常使用的 <ahref="https://excalidraw.com/">Excalidraw</a> 和 <ahref="https://app.diagrams.net/">draw.io</a>的画布平移功能类似，如下图所示：</p><p><imgsrc="https://floribunda-1303001230.cos.ap-nanjing.myqcloud.com/ezgif.com-gif-maker.gif" /></p><p>由于我使用的是 svg 去做渲染，很容易想到用 transform去实现画布的平移缩放</p><p>我们在平时的常规 UI 开发中也会有需要使用 transform功能的场景，但是大多都是简单的变换位置，比如使用 rotation 去做动画，或者translation 去调整元素的位置，稍微高级一些的可能会用到 skew, rotation,translation 的组合来做一些更酷炫的 css3 动画</p><p>本以为这是个比较简单的功能，但是稍微了解了一下以后发现里面的水比我想象的深，其中困扰我的有但不仅仅限于以下几个问题：</p><ul><li>transform 的顺序有关系吗?，比如先 scale 再 skew，或先 translate 再scale</li><li>transform 的 matrix 属性是什么意思？</li><li>如何以鼠标的位置为 transform-origin 对画布进行平移缩放？</li><li>如何将鼠标的位置根据画布的 transform转换到画布上的点？比如画布缩放、平移以后在画布上绘制圆和矩形，如何正确的对应到画布的点上？</li></ul><p>这些问题困扰着我，让我感觉它仿佛并不简单，在网上查阅一些资料以后，发现这些问题对应着图形学中的<strong>坐标变换</strong>相关知识，想要深入了解和理解这些又不得不接触线性代数，一个接着一个的坑🥲</p><p>本文更多的是自己对于这部分知识的整理和输出，并不一定都是对的，如有错误欢迎指出</p><h2 id="从一些基础的线性代数概念开始">从一些基础的线性代数概念开始</h2><blockquote><p>[!note] 以下标 * 的标题表示拓展</p></blockquote><p>对于线性代数和矩阵变换我了解的并不太多，很多稍微高级一点的概念因为现阶段用不到只是蜻蜓点水的过了一遍，比如行列式(determinant)和特征值/特征向量(eigenvalues/eigenvectors)等，更多的还是聚焦于向量的表示/变换和矩阵的复合等</p><p>这里推荐 3blue1brown 的 <ahref="https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab">Essenceof linear algebra -YouTube</a>，讲的很通俗易懂，我自己的大部分对于线代的理解也来源于这个系列，有条件的同学强烈建议去看一看该教程（线代大佬可以无视🤣）</p><blockquote><p>注：不要偷懒，一定要看看线性代数相关教程</p></blockquote><h3 id="向量">向量</h3><p>在一些其他编程语言，如 C++ 中，就有一种数据类型为vector，它表示为一个可以动态扩容的数组，而数组的特点就是<strong>有向的列表</strong>。我们在这里要说的向量和<strong>有向的列表</strong> 有一定的关联，但又不完全一样</p><p>我们可以理解为向量就是<em>空间中的有向箭头</em>，一个向量由其长度和方向决定，和它在空间中的位置无关，只要两个向长度和方向相同，我们就可以认为它们是同一个向量</p><p>例如下图中的 <span class="math inline">\(\vec{AE}\)</span> 和 <spanclass="math inline">\(\vec{CD}\)</span> 就是同一个向量</p><p><imgsrc="https://floribunda-1303001230.cos.ap-nanjing.myqcloud.com/20220509163910.png" /></p><p>因此，我们可以认为所有的向量的起点都是原点，也方便我们去研究和理解问题</p><h4 id="向量的运算">向量的运算</h4><h6 id="向量乘以常量">向量乘以常量</h6><p>一个向量 <span class="math inline">\(\vec{u}\)</span> 乘以一个常量<span class="math inline">\(\lambda\)</span></p><ul><li>如果 <span class="math inline">\(\lambda &gt; 0\)</span>,那么结果向量 <span class="math inline">\(\vec{v}\)</span> 的方向和向量<span class="math inline">\(\hat{u}\)</span>的方向相同，不过长度变为原来的 <spanclass="math inline">\(\lambda\)</span> 倍</li><li>如果 <span class="math inline">\(\lambda &lt;0\)</span>，那么结果向量 <span class="math inline">\(\vec{v}\)</span>的方向和向量 <span class="math inline">\(\hat{u}\)</span>的方向相反，长度变为原来的 <spanclass="math inline">\(|\lambda|\)</span> 倍</li><li>如果 <span class="math inline">\(\lambda = 0\)</span>，那么结果就是<span class="math inline">\(\vec{0}\)</span></li></ul><h6 id="向量加减运算">向量加减运算</h6><p>向量的加法可以用两种方式去理解，例如下面的 <spanclass="math inline">\(\vec{AB} + \vec{AC}\)</span></p><p>第一就是平行四边形，即结果等于以 AB AC 为边所组成的平行四边形的对角线<span class="math inline">\(\vec{AD}\)</span></p><p>第二就是将一个向量的尾部平移至另一个向量的头部，然后连接第一个向量的尾部和第二个向量的头部，就是两个向量的加和，即<span class="math inline">\(\vec{AD}\)</span></p><p><imgsrc="https://floribunda-1303001230.cos.ap-nanjing.myqcloud.com/20220509201101.png" /></p><p>这种运算也有其物理意义，我们可以认为向量代表着空间上的位移，两个向量相加所得到的向量就是实际位移的长度</p><p>向量的减法也比较简单，例如 <span class="math inline">\(\vec{AB} -\vec{AC}\)</span>，我们可以理解为 <span class="math inline">\(\vec{AB} +(- \vec{AC})\)</span></p><p>关于向量的点乘和叉乘这里就不过多描述，后面会提到</p><h4 id="向量的线性组合基向量">向量的线性组合，基向量</h4><p>在上面也提到，<span class="math inline">\(\vec{AD} = \vec{AB} +\vec{AC}\)</span>，即该向量可以由 <strong>线性不相关(linearlyindependent)</strong> 的 <span class="math inline">\(\vec{AB}\)</span>和 <span class="math inline">\(\vec{AC}\)</span>组合而成，这种一个向量由两个或多个向量的组合表示的现象，被称为<strong>线性组合(linearcombination)</strong>，用数学公式表达的话，即</p><p><span class="math display">\[\begin{align}\vec{u} = \alpha \vec{v} + \beta \vec{w}, \space \space \alpha, \beta\in R\end{align}\]</span></p><blockquote><p>注：一组向量线性不相关表示该组向量中的任何一个向量都不能由该组中的其他的向量组合表示</p></blockquote><p>既然向量可以通过线性组合的方式来表示，那我们不妨建立一个二维坐标系，在空间中我们定义两个向量，然后在这个二维坐标系中的任何向量都可以用这两个向量线性组合表示：</p><p><span class="math display">\[\begin{align}\hat{i} = \begin{bmatrix}1 \\0\end{bmatrix}\\\hat{j} = \begin{bmatrix}0 \\1\end{bmatrix}\end{align}\]</span></p><p>其中 <span class="math inline">\(\hat{i}\)</span> 表示起点在(0,0)，终点在 (1, 0) 的向量，<spanclass="math inline">\(\hat{j}\)</span> 表示起点在 (0,0)，终点在 (0, 1)的向量，这两个向量我们称其为 <strong>基向量(basis vector)</strong></p><p>例如下图中的几个向量，我们都可以用这两个基向量的组合来表示</p><p><span class="math display">\[\begin{align}\vec{AB} &amp;= 2\vec{i} + 2\vec{j}\\\vec{AE} &amp;= \vec{i} - \vec{j}\\\vec{CD} &amp;= 2\vec{i} - 2\vec{j}\end{align}\]</span></p><p><imgsrc="https://floribunda-1303001230.cos.ap-nanjing.myqcloud.com/20220509163910.png" /></p><p>由 <span class="math inline">\(\{\vec{i},\space\space\vec{j}\}\)</span>这两个向量线性组合所得到的所有的向量（即整个平面）的空间被称为这一组向量所张成的<strong>空间(span)</strong></p><p>既然我们已经约定俗成了这两个基向量，那么向量的表示就可以不用那么繁琐，直接省略<span class="math inline">\(\hat{i}\)</span> 和 <spanclass="math inline">\(\hat{j}\)</span> 了，即</p><p><span class="math display">\[\begin{align}\vec{AB} &amp;= \begin{bmatrix}2 \\2\end{bmatrix}\\\vec{AE} &amp;= \begin{bmatrix}1 \\-1\end{bmatrix}\\\vec{CD} &amp;= \begin{bmatrix}2 \\-2\end{bmatrix}\end{align}\]</span></p><h3 id="线性变换">线性变换</h3><p>wiki 对于线性变换的定义如下：</p><blockquote><p>a <strong>linear map</strong> (also called a <strong>linearmapping</strong>, <strong>linear transformation</strong>, <strong>vectorspace homomorphism</strong>, or in some contexts <strong>linearfunction</strong>) is a <ahref="https://en.wikipedia.org/wiki/Map_(mathematics)"title="Map (mathematics)">mapping</a> between <spanclass="math inline">\(V \rightarrow W\)</span>  between two <ahref="https://en.wikipedia.org/wiki/Vector_space">vector spaces</a> thatpreserves the operations of <ahref="https://en.wikipedia.org/wiki/Vector_addition"title="Vector addition">vector addition</a> and <ahref="https://en.wikipedia.org/wiki/Scalar_multiplication"title="Scalar multiplication">scalar multiplication</a>.</p></blockquote><p>翻译过来，线性变换就是从向量空间 <spanclass="math inline">\(V\)</span> 到向量空间 <spanclass="math inline">\(W\)</span>的映射函数，同时保留向量的加法和标量乘法，这里有几个关键字：</p><ol type="1"><li><strong>向量空间</strong> 即包含一组向量的集合，例如下面的向量空间<spanclass="math inline">\(V\)</span>，就表示一个三维空间的所有向量</li></ol><p><span class="math display">\[\begin{align}V &amp;= \{v_1, ..., v_n\} \\v &amp;= \{x,\space y,\space z\}, \space \space x,y,z \in R\end{align}\]</span></p><ol start="2" type="1"><li><strong>映射函数</strong>，这表示线性变换的本质就是一个函数，和我们在编程中的函数一样，都是接受一个input，返回一个 output，这里的 input 和 output都是向量空间中的成员，即向量</li></ol><p>到这里，我们可以暂时的将线性变换理解为：<font color='tomato'>线性变换是一个函数，它的输入是一个向量，输出也是一个向量</font></p><p>但是判断一个变换是否为线性变换，也需要满足两个条件：</p><ol type="1"><li>所有的直线变换后必须还是直线，不能被弯曲</li><li>原点必须保持在原位</li></ol><p>从上面两点我们也可以得出一个结论：变换后的网格仍然保持平行等距的特性</p><p>例如下面这张图中，就是我们常见的缩放的线性变换，向量 <spanclass="math inline">\(\vec{v}\)</span> 从 <spanclass="math inline">\([50, 150]\)</span> 变换到 <spanclass="math inline">\([100, 300]\)</span> 的位置</p><p><imgsrc="https://floribunda-1303001230.cos.ap-nanjing.myqcloud.com/Animation.gif" /></p><p>那么有一个问题，<strong>我们该如何表示线性变换函数？</strong></p><p>我们在上面提到一个向量可以由一组线性不相关的基向量线性组合得到，同时也约定俗成了笛卡尔坐标系下的基向量</p><p><span class="math display">\[\begin{align}\hat{i} =\begin{bmatrix}1 \\0\end{bmatrix}\\\hat{j} =\begin{bmatrix}0 \\1\end{bmatrix}\end{align}\]</span></p><p>而且我们从线性变换中推导出来的结论 -- 即 <strong>网格线</strong>仍保持平行等距，我们可以得出另一个结论，即<strong>变换后的向量线性组合不发生变化</strong>，例如：</p><p><span class="math display">\[\vec{v} = 3\vec{i} + 2\vec{j}\]</span></p><p>那么在经过线性变换以后，我们可以得到</p><p><span class="math display">\[\vec{v&#39;} = 3 \vec{i&#39;} + 2\vec{j&#39;}\]</span></p><blockquote><p>[!IMPORTANT]我们可以用经过线性变换后的基向量来表示一次线性变换，然后所有的向量都可以由这一组向量线性组合得到</p></blockquote><p>例如我们在上图中的 gif 图中，可以看出是将所有的向量执行了 scale操作，其基向量变换后的值为</p><p><span class="math display">\[\begin{align}\vec{i} =\begin{bmatrix}2 \\0\end{bmatrix}\\\vec{j} =\begin{bmatrix}0 \\2\end{bmatrix}\end{align}\]</span></p><p>我们可以再稍微简化一下，将这次线性变换表示为</p><p><span class="math display">\[\begin{bmatrix}2 &amp;&amp; 0 \\0 &amp;&amp; 2\end{bmatrix}\]</span></p><p>左边一列为 <span class="math inline">\(\hat{i}\)</span> ，右边为<spanclass="math inline">\(\vec{j}\)</span>，学过线性代数的童鞋可能一眼就发现了，这不就是矩阵吗？没错，但是更妙的还在后面，我们还可以套上矩阵的乘法来表示向量变换后的结果以及复合线性变换，例如对于下面的向量</p><p><span class="math display">\[\begin{align}\vec{v} = \begin{bmatrix}3 \\2\end{bmatrix}\end{align}\]</span></p><p>我们对其进行如上的线性变换，可以得到变换后的结果为</p><p><span class="math display">\[\begin{align}\vec{v&#39;} &amp;= f(\vec{v})\\\\&amp;= \begin{bmatrix}\vec{i&#39;} &amp;&amp; \vec{j&#39;} \\\end{bmatrix}\begin{bmatrix}3 \\2\end{bmatrix}\\\\&amp;= \begin{bmatrix}2 &amp;&amp; 0 \\0 &amp;&amp; 2\end{bmatrix}\begin{bmatrix}3 \\2\end{bmatrix}\\\\&amp;=3 \cdot\begin{bmatrix}2 \\0\end{bmatrix}+2 \cdot\begin{bmatrix}0 \\2\end{bmatrix}\\\\&amp;=\begin{bmatrix}3 \cdot 2 + 2 \cdot 0 \\3 \cdot 0 + 2 \cdot 2\end{bmatrix}\\\\&amp;=\begin{bmatrix}6 \\4\end{bmatrix}\end{align}\]</span></p><p>那么到这里我们就明白了以下几点：</p><ol type="1"><li>线性变换的性质</li><li>线性变换的表示方式</li><li>对于向量的线性变换运算方式</li></ol><h4 id="复合变换">复合变换</h4><p>复合变换就是线性变换的组合，例如我们有两个线性变换 <spanclass="math inline">\(f, g\)</span>，则它们的复合就是</p><p><span class="math display">\[f(g(\vec{v}))\]</span></p><p>复合变换的结果仍然是一个等价的变换，还是上面那个例子，对一个向量做 g,f 变换以后，可以等价为对这个向量做 h 变换</p><p><span class="math display">\[h(\vec{v}) = f(g(\vec{v}))\]</span></p><p>例如下面这两张图中，一个是先后进行了两次变换，另一个是只进行了一次变换，但是它们的结果是相同的</p><p><imgsrc="https://floribunda-1303001230.cos.ap-nanjing.myqcloud.com/rotateThenScale.gif" /></p><center>先是旋转，再进行缩放</center><p><imgsrc="https://floribunda-1303001230.cos.ap-nanjing.myqcloud.com/rotateAndScale.gif" /></p><center>一次复合变换</center><p>那么，我们有办法计算多个线性变换复合后的等价线性变换吗？答案当然是有的</p><p>假定我们有以下两个线性变换：</p><p><span class="math display">\[\begin{align}f &amp;=\begin{bmatrix}2 &amp;&amp; 0 \\0 &amp;&amp; 2\end{bmatrix}\\\\g &amp;=\begin{bmatrix}\cos(\frac{\pi}{3}) &amp;&amp; sin(\frac{\pi}{3}) \\-\sin(\frac{\pi}{3}) &amp;&amp; cos(\frac{\pi}{3})\end{bmatrix}\end{align}\]</span></p><p>容易看出来 f 将向量缩放为原来的两倍，g 为顺时针旋转60°，当我们对一个向量执行 <spanclass="math inline">\(f(g(\vec{v}))\)</span>的操作时，其等价的线性变换是什么？</p><p>其实我们直接利用矩阵的乘法，将两个矩阵相乘就可以得到结果</p><p><span class="math display">\[\begin{align}h &amp;=\begin{bmatrix}2 &amp;&amp; 0 \\0 &amp;&amp; 2\end{bmatrix}\begin{bmatrix}\cos(\frac{\pi}{3}) &amp;&amp; sin(\frac{\pi}{3}) \\-\sin(\frac{\pi}{3}) &amp;&amp; cos(\frac{\pi}{3})\end{bmatrix}\\\\&amp;=\begin{bmatrix}\begin{bmatrix}2 &amp;&amp; 0 \\0 &amp;&amp; 2\end{bmatrix}\begin{bmatrix}\frac{1}{2}  \\-\frac{\sqrt{3}}{2}\end{bmatrix}&amp;&amp;\begin{bmatrix}2 &amp;&amp; 0 \\0 &amp;&amp; 2\end{bmatrix}\begin{bmatrix}\frac{\sqrt{3}}{2} \\\frac{1}{2}\end{bmatrix}\end{bmatrix}\\\\&amp;=\begin{bmatrix}1 &amp;&amp; \sqrt{3}\\-\sqrt{3} &amp;&amp; 1\end{bmatrix}\end{align}\]</span></p><p>这里具体的公式不重要，重要的是我们怎么理解这个公式，或者说这个公式为什么逻辑上讲得通，我们对这个运算过程进行一个抽象</p><p>在经过 g 变换以后，原来的 <span class="math inline">\(\vec{i}\rightarrow \vec{i&#39;}\)</span>，<span class="math inline">\(\vec{j}\rightarrow \vec{j&#39;}\)</span></p><p><span class="math display">\[\begin{align}g = \begin{bmatrix}\vec{i&#39;} &amp;&amp; \vec{j&#39;}\end{bmatrix}\end{align}\]</span></p><p>那么我们再次进行 f 变换，就相当于对 g变换后的基向量进行了再一次变换，即 <spanclass="math inline">\(\vec{i&#39;} \rightarrow\vec{i&#39;&#39;}\)</span>，<span class="math inline">\(\vec{j&#39;}\rightarrow \vec{j&#39;&#39;}\)</span>，得到的 <spanclass="math inline">\(\vec{i&#39;&#39;}, \vec{j&#39;&#39;}\)</span>就是我们最终变换后的结果</p><p><span class="math display">\[\begin{align}\vec{i&#39;&#39;} &amp;= \begin{bmatrix}2 &amp;&amp; 0 \\0 &amp;&amp; 2\end{bmatrix}\begin{bmatrix}\frac{1}{2}  \\-\frac{\sqrt{3}}{2}\end{bmatrix}\\\vec{j&#39;&#39;} &amp;= \begin{bmatrix}2 &amp;&amp; 0 \\0 &amp;&amp; 2\end{bmatrix}\begin{bmatrix}\frac{\sqrt{3}}{2} \\\frac{1}{2}\end{bmatrix}\\h &amp;= \begin{bmatrix}1 &amp;&amp; \sqrt{3}\\-\sqrt{3} &amp;&amp; 1\end{bmatrix}\end{align}\]</span></p><h4 id="逆变换">逆变换</h4><p>理解了上面的复合变换，逆变换就很好理解了，逆变换就是一个线性变换的逆。当我们先进行了一次线性变换以后，再进行另一次线性变换以后，如果向量和进行线性变换之前相同，那么就说这两次线性变换互逆</p><p>例如对于下面的线性变换</p><p><span class="math display">\[A = \begin{bmatrix}2 &amp;&amp; 0 \\0 &amp;&amp; 2\end{bmatrix}\]</span></p><p>我们很容易想到它的逆为</p><p><span class="math display">\[A^{-1} = \begin{bmatrix}\frac{1}{2} &amp;&amp; 0 \\0 &amp;&amp; \frac{1}{2}\end{bmatrix}\]</span></p><p>我们将这两次线性变换进行组合，得到的结果为</p><p><span class="math display">\[AA^{-1} = \begin{bmatrix}1 &amp;&amp; 0 \\0 &amp;&amp; 1\end{bmatrix}\]</span></p><p>这个结果就是 <em>identity matrix</em>，即不发生任何变换的线性变换</p><p>我们也可以用以下的公式计算出一个矩阵的逆</p><p><span class="math display">\[\begin{bmatrix}a &amp;&amp; b \\c &amp;&amp; d\end{bmatrix}^{-1}=\frac{1}{ad-bc}\begin{bmatrix}d &amp;&amp; -b \\-c &amp;&amp; a\end{bmatrix}\]</span></p><h4 id="坐标系的相互转换">坐标系的相互转换</h4><p>上面我们说的基向量的选择是根据我们在笛卡尔坐标系下的约定俗成的基向量，但是我们完全也可以不选择<span class="math inline">\(\hat{i}\)</span> 和 <spanclass="math inline">\(\hat{j}\)</span>作为基向量，而是在空间中另外选择任意两个线性不相关的向量 <spanclass="math inline">\(\hat{u}\)</span>, <spanclass="math inline">\(\hat{v}\)</span>作为基向量，其他向量由这两个向量的线性组合得到</p><p>我们假定这两个基向量的值为</p><p><span class="math display">\[\begin{align}\vec{u} =\begin{bmatrix}0.6 \\0.4\end{bmatrix}\\\vec{v} =\begin{bmatrix}0.4 \\-1\end{bmatrix}\end{align}\]</span></p><p>从下面的图里我们可以看到这两组基向量在笛卡尔坐标系下的展示</p><p><imgsrc="https://floribunda-1303001230.cos.ap-nanjing.myqcloud.com/20220518224927.png" /></p><p>既然可以使用不同的基向量去表示某一向量，那么问题来了，对于空间中的同一个向量，我们怎么从一个坐标系表示转换到另一个坐标系表示?</p><p>例如上图中的 <spanclass="math inline">\(\vec{a}\)</span>，我们可以用两种方式表示它</p><p><span class="math display">\[\begin{align}\vec{a} &amp;= \vec{u} + \vec{v}\\\vec{a} &amp;=\begin{bmatrix}1 \\1\end{bmatrix}\\\\or \space \space \vec{a} &amp;= \vec{i} + (-0.6) \vec{j}\\\vec{a} &amp;= \begin{bmatrix}1 \\-0.6\end{bmatrix}\end{align}\]</span></p><p>但是到底怎么算出来呢？</p><p>其实按照我自己的经验来看，要理解坐标系转换这件事还挺反直觉的，就像十进制和二进制之间的转换一样，我们早已习惯了在十进制下的运算，所以二进制转十进制比较方便，但是一旦反过来，我们就比较难理解其原理，或者换种说法就是很难掰过来自己的惯性思维🤣</p><p>这里提供一个简单的思路，我们先去理解<strong>如何将非标准坐标系下的向量表示转换为标准坐标系下的向量表示</strong></p><p>要解决这个问题，我们只需要知道非标准坐标系下的 <spanclass="math inline">\(\hat{u}\)</span> 和 <spanclass="math inline">\(\hat{v}\)</span>向量在标准坐标系下的表示是什么即可，例如对于上面的 <spanclass="math inline">\(\vec{a}\)</span>，我们知道它在非标准坐标系下的表示为<span class="math inline">\({1\brack1}\)</span>，那么我们就可以将其转化为:</p><p><span class="math display">\[\begin{align}\vec{a}&amp;= 1\vec{u} + 1\vec{v}\\\\&amp;= 1 \begin{bmatrix}0.6 \\0.4\end{bmatrix}+1 \begin{bmatrix}0.4 \\-1\end{bmatrix}\\\\&amp;=\begin{bmatrix}0.6 + 0.4 \\0.4 - 1\end{bmatrix}\\\\&amp;=\begin{bmatrix}1 \\-0.6\end{bmatrix}\end{align}\]</span></p><p>这个很好理解，因为就是将非标准坐标系下的基准向量理解为笛卡尔坐标系下的一组普通向量，然后得到这组向量的对应线性组合就行</p><p>我们也可以将上述的过程表示为</p><p><span class="math display">\[\begin{align}\vec{a}&amp;= \begin{bmatrix}0.6 &amp;&amp; 0.4\\0.4 &amp;&amp; -1\end{bmatrix}\begin{bmatrix}1 \\1\end{bmatrix}\\\\&amp;= \begin{bmatrix}1 \\-0.6\end{bmatrix}\end{align}\]</span></p><p>这里的核心就是两个坐标系的基准向量之间的相互转换，从非标准到标准的转换就是把<span class="math inline">\(\vec{u}\)</span> 和 <spanclass="math inline">\(\vec{v}\)</span> 为 <spanclass="math inline">\(\vec{i}\)</span> 和 <spanclass="math inline">\(\vec{j}\)</span> 表示</p><p>反过来也成立，从标准坐标系到非标准坐标系就是将 <spanclass="math inline">\(\vec{i}\)</span> 和 <spanclass="math inline">\(\vec{j}\)</span> 转为 <spanclass="math inline">\(\vec{u}\)</span> 和 <spanclass="math inline">\(\vec{v}\)</span>，那么我们就可以得到 <spanclass="math inline">\(\vec{a}\)</span> 在非标准坐标系下的表示为</p><p><span class="math display">\[\begin{align}\vec{a} &amp;=\begin{bmatrix}0.6 &amp;&amp; 0.4 \\0.4 &amp;&amp; 1\end{bmatrix}^{-1}\begin{bmatrix}1 \\-0.6\end{bmatrix}=\begin{bmatrix}1 \\1\end{bmatrix}\end{align}\]</span></p><p>这样我们就可以得到一个公式，假设标准坐标系 <spanclass="math inline">\(s\)</span> 到非标准坐标系 <spanclass="math inline">\(n\)</span> 的线性变换为 <spanclass="math inline">\(A\)</span>，那么：</p><ul><li>非标准 -&gt; 标准 <span class="math display">\[\begin{align}\vec{v} = A\begin{bmatrix}x_{n} \\y_{n}\end{bmatrix}\end{align}\]</span></li><li>标准 -&gt; 非标准</li></ul><p><span class="math display">\[\begin{align}\vec{v} = A^{-1}\begin{bmatrix}x_{s} \\y_{s}\end{bmatrix}\end{align}\]</span></p><p>到这里线性代数的基本知识就告一段落了，里面还有很多内容本篇没涉及到，例如<strong>行列式(determinant)</strong>，<strong>特征值(eigenvalue)，特征向量(eigenvector)</strong>,<strong>向量内积外积</strong>，<strong>线性方程组</strong>等，这些都是线代中的很重要的概念，但是由于篇幅原因，以及我们具体的使用场景限制，关于线性代数的内容就介绍到这里，读者如果想深入理解变换请务必<em>严肃学习！</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近在做的一个项目，其中需要缩放、平移画布的功能，和我们经常使用的 &lt;a
href=&quot;https://excalidraw.com/&quot;&gt;Excalidraw&lt;/a&gt; 和 &lt;a
href=&quot;https://app.diagrams</summary>
      
    
    
    
    <category term="Dive into Transformation" scheme="https://floribunda1.github.io/categories/Dive-into-Transformation/"/>
    
    
    <category term="数学" scheme="https://floribunda1.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="图形学" scheme="https://floribunda1.github.io/tags/%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
    <category term="前端" scheme="https://floribunda1.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>一个新的开始</title>
    <link href="https://floribunda1.github.io/2022/03/19/%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
    <id>https://floribunda1.github.io/2022/03/19/%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/</id>
    <published>2022-03-19T13:17:02.730Z</published>
    <updated>2022-05-17T02:56:20.783Z</updated>
    
    <content type="html"><![CDATA[<p>其实写博客这个想法很久之前就有了，也曾经尝试过去写一些，最后都没有办法达到自己满意的效果</p><p>想了想原因，还是因为自己把写博客这件事情看的太重了，希望自己能输出一些有价值，深度的文章，哪怕是在学习新技术的过程中或者对自己之前做的事情的复盘，都希望自己能认真写，写好。然而最后都是因为自己的完美主义作祟，达不到自己想要的效果，又把这些文章删了</p><p>随着后来的踩坑和成长，逐渐意识到这样不好，世界并非是非黑即白的。现在想想我写博客一方面是记录自己的学习成长过程，倒逼自己的输出，另一方面是以后回过头来看看自己，发现这段时间并没有荒废，哪怕自己走了很多的弯路，也能意识到自己当时努力了，那样就好</p><p>希望以后能长更博客，不管是cheatsheet，还是一些学习笔记，还是自己的一些牢骚或者想法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;其实写博客这个想法很久之前就有了，也曾经尝试过去写一些，最后都没有办法达到自己满意的效果&lt;/p&gt;
&lt;p&gt;想了想原因，还是因为自己把写博客这件事情看的太重了，希望自己能输出一些有价值，深度的文章，哪怕是在学习新技术的过程中或者对自己之前做的事情的复盘，都希望自己能认真写，写</summary>
      
    
    
    
    <category term="杂谈" scheme="https://floribunda1.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="杂谈" scheme="https://floribunda1.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
</feed>
